// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package orderModule

import (
	"github.com/google/wire"
	"golang/pkg/common"
	"golang/pkg/helpers"
	"golang/pkg/productModule"
	"golang/pkg/repos/implement"
	"golang/pkg/repos/interfaces"
	"golang/pkg/tokenModule"
)

// Injectors from wire.go:

func InitialOrderController() *OrderController {
	db := helpers.NewSqlSession()
	client := helpers.NewRedisClient()
	productRepo := implement.NewProductRepo(db, client)
	productService := productModule.NewProductService(productRepo)
	connPool := helpers.GetConnPool()
	orderRepo := implement.NewOrderRepo(connPool)
	mailRepo := implement.NewMailRepo(connPool)
	mailService := common.NewMailService(mailRepo)
	orderService := NewOrderService(productService, orderRepo, mailService)
	tokenService := tokenModule.NewTokenService()
	orderController := NewOrderController(orderService, tokenService)
	return orderController
}

// wire.go:

var ProductRepo = wire.NewSet(implement.NewProductRepo, wire.Bind(new(interfaces.ProductRepo), new(*implement.ProductRepo)))

var OrderRepo = wire.NewSet(implement.NewOrderRepo, wire.Bind(new(interfaces.OrderRepo), new(*implement.OrderRepo)))

var MailRepo = wire.NewSet(implement.NewMailRepo, wire.Bind(new(interfaces.MailRepo), new(*implement.MailRepo)))
